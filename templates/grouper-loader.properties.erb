# Managed by Puppet

# Grouper loader uses Grouper Configuration Overlays (documented on wiki)
# By default the configuration is read from grouper-loader.base.properties
# (which should not be edited), and the grouper-loader.properties overlays
# the base settings.  See the grouper-loader.base.properties for the possible
# settings that can be applied to the grouper.properties

ldap.default.ldapUrl =  <%=@psp_config['psp_ldap_url'] %>
ldap.default.bindDn = <%=@psp_config['psp_bind_dn'] %>
ldap.default.bindCredential = <%=@psp_config['psp_bind_password'] %>
# ldap.default.someOtherLdapProperty = value

daily.report.quartz.cron = 0 0 * * * ?

# supposedly these are deprecated in pspng patch #11 and should not be used
# See 'Upgrade Warning': https://spaces.internet2.edu/display/Grouper/Grouper+Provisioning%3A+PSPNG
# But...how else to get a full sync at restart?  Leaving that part enabled.

changeLog.psp.fullSync.runAtStartup = true
changeLog.psp.fullSync.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter
#changeLog.psp.fullSync.quartzCron = 0 0 0 * * ?

otherJob.pspng_full.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter
otherJob.pspng_full.quartzCron = 0 0 0 * * ?

# if mailto or savedir isn't set then no report will run
daily.report.quartz.cron = 0 0 * * * ?

<% if @psp_config['psp_daily_report_mailto'] -%>
daily.report.emailTo = <%= @psp_config['psp_daily_report_mailto'] %>
<%- end -%>

<% if @psp_config['psp_daily_report_savedir'] -%>
daily.report.saveInDirectory = <%= @psp_config['psp_daily_report_savedir'] %>
<%- end -%>

# this provisions an object with class groupOfUniqueNames and posixGroup
# grouperIsAuthoritative is TRUE but effects only groups provisioned by this consumer
# which sets the psp_bind_dn as the owner of provisioned groups

changeLog.consumer.pspng_groupOfUniqueNames.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.pspng_groupOfUniqueNames.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
changeLog.consumer.pspng_groupOfUniqueNames.quartzCron = 0 * * * * ?
changeLog.consumer.pspng_groupOfUniqueNames.ldapPoolName = default
changeLog.consumer.pspng_groupOfUniqueNames.memberAttributeName = uniqueMember
# changeLog.consumer.pspng_posixGroup.memberAttributeValueFormat = ${ldapUser.getStringValue("uid")}
changeLog.consumer.pspng_groupOfUniqueNames.memberAttributeValueFormat = ${ldapUser.getDn()}
changeLog.consumer.pspng_groupOfUniqueNames.groupSearchBaseDn = <%=@psp_config['psp_group_search_dn'] %>
changeLog.consumer.pspng_groupOfUniqueNames.allGroupsSearchFilter = (&(objectclass=groupOfUniqueNames)(owner=<%=@psp_config['psp_bind_dn'] %>))
changeLog.consumer.pspng_groupOfUniqueNames.singleGroupSearchFilter = (&(objectclass=groupOfUniqueNames)(cn=${group.name}))
changeLog.consumer.pspng_groupOfUniqueNames.groupSearchAttributes = cn,gidNumber,objectclass
changeLog.consumer.pspng_groupOfUniqueNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: groupOfUniqueNames||objectclass: posixGroup||gidNumber: ${group.idIndex}||owner: <%=@psp_config['psp_bind_dn'] %>
changeLog.consumer.pspng_groupOfUniqueNames.userSearchBaseDn = <%= @psp_config['psp_user_search_dn'] %>
changeLog.consumer.pspng_groupOfUniqueNames.userSearchFilter = uid=${subject.id}
changeLog.consumer.pspng_groupOfUniqueNames.grouperIsAuthoritative = TRUE

# changeLog.consumer.pspng_posixGroup.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
# changeLog.consumer.pspng_posixGroup.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
# changeLog.consumer.pspng_posixGroup.quartzCron = 0 * * * * ?
# changeLog.consumer.pspng_posixGroup.ldapPoolName = default
# changeLog.consumer.pspng_posixGroup.memberAttributeName = memberUid
# changeLog.consumer.pspng_posixGroup.memberAttributeValueFormat = ${ldapUser.getStringValue("uid")}
# changeLog.consumer.pspng_posixGroup.groupSearchBaseDn = <%=@psp_config['psp_group_search_dn'] %>
# changeLog.consumer.pspng_posixGroup.allGroupsSearchFilter = objectclass=posixGroup
# changeLog.consumer.pspng_posixGroup.singleGroupSearchFilter = (&(objectclass=posixGroup)(cn=${group.name}))
# changeLog.consumer.pspng_posixGroup.groupSearchAttributes = cn,gidNumber,objectclass
# # Obviously, gidNumber should be based on a grouper-group attribute
# changeLog.consumer.pspng_posixGroup.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: posixGroup||objectclass: groupOfNames||gidNumber: ${group.idIndex}
# changeLog.consumer.pspng_posixGroup.userSearchBaseDn =<%=@psp_config['psp_user_search_dn'] %>
# changeLog.consumer.pspng_posixGroup.userSearchFilter = uid=${subject.id}

# better to set the ldap server to maintain memberOf relationships, left for example

# changeLog.consumer.pspng_memberOf.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
# changeLog.consumer.pspng_memberOf.type = edu.internet2.middleware.grouper.pspng.LdapAttributeProvisioner
# changeLog.consumer.pspng_memberOf.quartzCron = 0 * * * * ?
# changeLog.consumer.pspng_memberOf.retryOnError = true
# changeLog.consumer.pspng_memberOf.ldapPoolName = default
# changeLog.consumer.pspng_memberOf.provisionedAttributeName = memberOf
# changeLog.consumer.pspng_memberOf.provisionedAttributeValueFormat = ${group.name}
# changeLog.consumer.pspng_memberOf.userSearchBaseDn = <%= @psp_config['psp_user_search_dn'] %>
# changeLog.consumer.pspng_memberOf.userSearchFilter = uid=${subject.id}
# changeLog.consumer.pspng_memberOf.allProvisionedValuesPrefix=g:

#changeLog.consumer.pspng_attributes.provisionedAttributeName = eduPersonEntitlement
#changeLog.consumer.pspng_attributes.provisionedAttributeValueFormat = g:${group.name}
#changeLog.consumer.pspng_attributes.userSearchBaseDn = <%=@psp_config['psp_user_search_dn'] %>
#changeLog.consumer.pspng_attributes.userSearchFilter = uid=${subject.id}
#changeLog.consumer.pspng_attributes.allProvisionedValuesPrefix=g:
